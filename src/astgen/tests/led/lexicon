lparen = \(
rparen = \)
lcurparen = \{
rcurparen = \}
hat = \^
Sum = Sum
Prod = Prod
Union = Union
Nrsec = Nrsec
lsqparen = \[
rsqparen = \]
minus = -
plus = \+
mult = \*
div = /
U = U
mod = mod
nrsec = nrsec
backslash = \\
lambda = lambda
dot = \.
twodots = \.\.
eq = = 
less = <
greater = >
lessoreq = <=
greateroreq = >=
in = in
subeq = subeq
colon = :
some = some
all = all
not = ~
and = &
or = or
implies = =>
equivalence = <=>
If = If
then = then
def = :=
semicolon = ;
otherwise = otherwise
where = where
iff = iff
if = if
vars = vars
var = var
comma = ,
Set = Set
List = List
map = ->
partmap = ~>
ddef = ::=
pipe = \|
floor = floor
ceil = ceil
identifier = [a-zA-Z][a-zA-Z0-9]*
numeral = [0-9]+|[0-9]*\.[0-9]+|[0-9]*\.[0-9]*\([0-9]+\.\.\)
spaces = \s+
single_quoted_string = '([^']*)'
